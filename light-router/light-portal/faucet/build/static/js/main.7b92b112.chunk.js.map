{"version":3,"sources":["components/Home.js","components/Result.js","components/Balance.js","components/Faucet.js","components/TransactionList.js","components/Transaction.js","components/ResponsiveDrawer.js","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","href","Component","Result","this","props","currencyMap","JSON","stringify","Balance","react","TextField_default","label","value","address","onChange","handleChange","margin","style","width","Button_default","color","variant","onClick","getBalance","components_Result","Faucet","classes","amount","FormControl_default","className","formControl","InputLabel_default","htmlFor","Select_default","currency","input","Input_default","name","id","MenuItem_default","FormHelperText_default","unit","postFaucet","withStyles","theme","root","display","flexWrap","spacing","minWidth","selectEmpty","marginTop","TransactionList","_this","transactions","Paper_default","Table_default","table","TableHead_default","TableRow_default","TableCell_default","numeric","TableBody_default","map","row","key","component","scope","moment","utc","time","format","toAddress","data","overflowX","Transaction","getTransaction","components_TransactionList","ResponsiveDrawer","state","mobileOpen","handleDrawerToggle","setState","_this$props","children","pathname","location","drawer","toolbar","Divider_default","MenuList_default","Link","to","selected","CssBaseline_default","AppBar_default","position","appBar","Toolbar_default","IconButton_default","aria-label","menuButton","Menu_default","Typography_default","noWrap","Hidden_default","smUp","implementation","Drawer_default","container","anchor","direction","open","onClose","paper","drawerPaper","ModalProps","keepMounted","xsDown","content","compose","withRouter","Object","defineProperty","breakpoints","up","flexShrink","marginLeft","concat","marginRight","mixins","flexGrow","padding","withTheme","App","undefined","event","target","_callee","e","api_call","regenerator_default","wrap","_context","prev","next","preventDefault","fetch","sent","json","stop","_callee2","settings","_context2","method","headers","Accept","Content-Type","body","_callee3","_context3","_this2","BrowserRouter","components_ResponsiveDrawer","Switch","Route","exact","path","render","components_Balance","assign","components_Faucet","components_Transaction","Boolean","window","hostname","match","createMuiTheme","typography","useNextVariants","ReactDOM","core_styles","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7b92b112.chunk.js","sourcesContent":["import React, {Component} from 'react';\nclass Home extends Component {\n    render() {\n        return (\n            <div>\n                <pre>\n                    This is the faucet for the testnet. Please first create an address by following the <a href=\"https://doc.taiji.io/getting-started/\">getting started guide</a> and come here to populate up to 1000 TAIJI coins per day.\n                </pre>\n                <pre>\n                    To learn more about the Taiji Blockchain, please visit <a href=\"https://doc.taiji.io/\">doc.taiji.io</a>, <a href=\"https://github.com/networknt/taiji-blockchain\">taiji-blockchain</a> and <a href=\"https://github.com/taiji-chain\">taiji-chain organization</a>.\n                </pre>\n                <pre>\n                    If you have questions or want to discuss the features, please visit <a href=\"https://gitter.im/networknt/taiji-blockchain\">gitter room</a> or <a href=\"https://www.reddit.com/r/TaijiChain/\">TaijiChain Reddit</a>.\n                </pre>\n            </div>\n        )\n    }\n}\n\nexport default Home;","import React, {Component} from 'react';\nclass Result extends Component {\n    render() {\n        if(this.props.currencyMap) {\n            return (<div><pre>{JSON.stringify(this.props.currencyMap, null, 2) }</pre></div>)\n        } else {\n            return (<div>Invalid Address!</div>)\n        }\n    }\n}\n\nexport default Result;","import React, {Component, Fragment} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Result from './Result';\n\nclass Balance extends Component {\n\n\n    render() {\n        return (\n            <Fragment>\n                <form>\n                    <TextField\n                        label=\"Address\"\n                        value={this.props.address}\n                        onChange={this.props.handleChange('address')}\n                        margin=\"normal\"\n                        style={{width: 370}}\n                    />\n                </form>\n                <Button color=\"primary\" variant=\"contained\" onClick={this.props.getBalance}>\n                    Balance\n                </Button>\n                <Result currencyMap={this.props.currencyMap} />\n            </Fragment>\n        )\n    }\n}\n\nexport default Balance;","import React, {Component, Fragment} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport Result from './Result';\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    formControl: {\n        margin: theme.spacing.unit,\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing.unit * 2,\n    },\n});\n\nclass Faucet extends Component {\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <Fragment>\n                <form>\n                    <TextField\n                        label=\"Address\"\n                        value={this.props.address}\n                        onChange={this.props.handleChange('address')}\n                        margin=\"normal\"\n                        style={{width: 370}}\n                    />\n                    <pre/>\n                    <TextField\n                        label=\"Amount\"\n                        value={this.props.amount}\n                        onChange={this.props.handleChange('amount')}\n                        margin=\"normal\"\n                    />\n                    <pre/>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel htmlFor=\"currency-helper\">Currency</InputLabel>\n                        <Select\n                            value={this.props.currency}\n                            onChange={this.props.handleChange('currency')}\n                            input={<Input name=\"currency\" id=\"currency-helper\" />}\n                        >\n                            <MenuItem value={'taiji'}>TAIJI</MenuItem>\n                        </Select>\n                        <FormHelperText>Select the currency you want to populate</FormHelperText>\n                    </FormControl>\n                    <pre/>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel htmlFor=\"unit-helper\">Unit</InputLabel>\n                        <Select\n                            value={this.props.unit}\n                            onChange={this.props.handleChange('unit')}\n                            input={<Input name=\"unit\" id=\"unit-helper\" />}\n                        >\n                            <MenuItem value={'SHELL'}>SHELL</MenuItem>\n                            <MenuItem value={'KSHELL'}>KSHELL</MenuItem>\n                            <MenuItem value={'MSHELL'}>MSHELL</MenuItem>\n                            <MenuItem value={'TAIJI'}>TAIJI</MenuItem>\n                            <MenuItem value={'KTAIJI'}>KTAIJI</MenuItem>\n                        </Select>\n                        <FormHelperText>Select the currency unit</FormHelperText>\n                    </FormControl>\n\n                </form>\n                <Button color=\"primary\" variant=\"contained\" onClick={this.props.postFaucet}>\n                    Populate\n                </Button>\n                <Result currencyMap={this.props.currencyMap} />\n            </Fragment>\n        )\n    }\n}\n\nexport default withStyles(styles)(Faucet);","import React, {Component} from 'react';\nimport moment from 'moment';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        marginTop: theme.spacing.unit * 3,\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 700,\n    },\n});\n\nclass TransactionList extends Component {\n    render() {\n        const { classes } = this.props;\n\n        if(this.props.transactions) {\n            return (\n                <div>\n                    <Paper className={classes.root}>\n                        <Table className={classes.table}>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell numeric>TxId</TableCell>\n                                    <TableCell>Time</TableCell>\n                                    <TableCell>ToAddress</TableCell>\n                                    <TableCell numeric>Amount in SHELL</TableCell>\n                                    <TableCell>Data</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {this.props.transactions.map(row => {\n                                    return (\n                                        <TableRow key={row.id}>\n                                            <TableCell component=\"th\" scope=\"row\">\n                                                {row.id}\n                                            </TableCell>\n                                            <TableCell>{moment.utc(row.time).format()}</TableCell>\n                                            <TableCell>{row.toAddress}</TableCell>\n                                            <TableCell numeric>{this.props.address === row.toAddress? '+' + row.value : '-' + row.value}</TableCell>\n                                            <TableCell>{row.data}</TableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                            </TableBody>\n                        </Table>\n                    </Paper>\n                </div>)\n        } else {\n            return (<div>Invalid Address or Currency!</div>)\n        }\n    }\n}\n\nexport default withStyles(styles)(TransactionList);","import React, {Component, Fragment} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport TransactionList from './TransactionList';\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    formControl: {\n        margin: theme.spacing.unit,\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing.unit * 2,\n    },\n});\n\nclass Transaction extends Component {\n    render() {\n        const { classes } = this.props;\n        return (\n            <Fragment>\n                <form>\n                    <TextField\n                        label=\"Address\"\n                        value={this.props.address}\n                        onChange={this.props.handleChange('address')}\n                        margin=\"normal\"\n                        style={{width: 370}}\n                    />\n                    <pre/>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel htmlFor=\"currency-helper\">Currency</InputLabel>\n                        <Select\n                            value={this.props.currency}\n                            onChange={this.props.handleChange('currency')}\n                            input={<Input name=\"currency\" id=\"currency-helper\" />}\n                        >\n                            <MenuItem value={'taiji'}>TAIJI</MenuItem>\n                        </Select>\n                        <FormHelperText>Select the currency you want to get transactions</FormHelperText>\n                    </FormControl>\n                </form>\n                <Button color=\"primary\" variant=\"contained\" onClick={this.props.getTransaction}>\n                    Transaction\n                </Button>\n                <TransactionList address={this.props.address} transactions={this.props.transactions} />\n            </Fragment>\n        )\n    }\n}\n\nexport default withStyles(styles)(Transaction);","import React, {Component} from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport {compose} from 'recompose';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport MenuList from '@material-ui/core/MenuList';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Hidden from '@material-ui/core/Hidden';\nimport Divider from '@material-ui/core/Divider';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n    },\n    drawer: {\n        [theme.breakpoints.up('sm')]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    appBar: {\n        marginLeft: drawerWidth,\n        [theme.breakpoints.up('sm')]: {\n            width: `calc(100% - ${drawerWidth}px)`,\n        },\n    },\n    menuButton: {\n        marginRight: 20,\n        [theme.breakpoints.up('sm')]: {\n            display: 'none',\n        },\n    },\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing.unit * 3,\n    },\n});\n\n\nclass ResponsiveDrawer extends Component {\n    state = {\n        mobileOpen: false,\n    };\n\n    handleDrawerToggle = () => {\n        this.setState(state => ({ mobileOpen: !state.mobileOpen }));\n    };\n\n    render() {\n        const { classes, children, location: { pathname }, theme } = this.props;\n\n        const drawer = (\n            <div>\n                <div className={classes.toolbar} />\n                <Divider />\n                <MenuList>\n                    <MenuItem component={Link} to=\"/\" selected={'/' === pathname}>\n                        Home\n                    </MenuItem>\n                    <MenuItem component={Link} to=\"/faucet\" selected={'/faucet' === pathname}>\n                        Faucet\n                    </MenuItem>\n                    <MenuItem component={Link} to=\"/balance\" selected={'/balance' === pathname}>\n                        Balance\n                    </MenuItem>\n                    <MenuItem component={Link} to=\"/transaction\" selected={'/transaction' === pathname}>\n                        Transaction\n                    </MenuItem>\n                </MenuList>\n            </div>\n        );\n\n        return (\n            <div className={classes.root}>\n                <CssBaseline />\n                <AppBar position=\"fixed\" className={classes.appBar}>\n                    <Toolbar>\n                        <IconButton\n                            color=\"inherit\"\n                            aria-label=\"Open drawer\"\n                            onClick={this.handleDrawerToggle}\n                            className={classes.menuButton}\n                        >\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                            Taiji Faucet - Testnet\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n                <nav className={classes.drawer}>\n                    {/* The implementation can be swap with js to avoid SEO duplication of links. */}\n                    <Hidden smUp implementation=\"css\">\n                        <Drawer\n                            container={this.props.container}\n                            variant=\"temporary\"\n                            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                            open={this.state.mobileOpen}\n                            onClose={this.handleDrawerToggle}\n                            classes={{\n                                paper: classes.drawerPaper,\n                            }}\n                            ModalProps={{\n                                keepMounted: true, // Better open performance on mobile.\n                            }}\n                        >\n                            {drawer}\n                        </Drawer>\n                    </Hidden>\n                    <Hidden xsDown implementation=\"css\">\n                        <Drawer\n                            classes={{\n                                paper: classes.drawerPaper,\n                            }}\n                            variant=\"permanent\"\n                            open\n                        >\n                            {drawer}\n                        </Drawer>\n                    </Hidden>\n                </nav>\n                <main className={classes.content}>\n                    <div className={classes.toolbar} />\n                    {children}\n                </main>\n            </div>\n        );\n    }\n}\n\n\nResponsiveDrawer.propTypes = {\n    classes: PropTypes.object.isRequired,\n    // Injected by the documentation to work in an iframe.\n    // You won't need it on your project.\n    container: PropTypes.object,\n    theme: PropTypes.object.isRequired,\n};\n\nexport default compose (\n    withRouter,\n    withStyles(styles, { withTheme: true })\n)(ResponsiveDrawer);\n","import React, {Component} from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\nimport Home from './components/Home';\nimport Balance from './components/Balance';\nimport Faucet from './components/Faucet';\nimport Transaction from './components/Transaction';\nimport ResponsiveDrawer from './components/ResponsiveDrawer';\n\nclass App extends Component {\n\n    state = {\n        address: '',\n        amount: '',\n        currency: 'taiji',\n        unit: 'TAIJI',\n        currencyMap: undefined,\n        transactions: undefined\n    };\n\n    handleChange = name => event => {\n        //console.log(name, event.target.value);\n        this.setState({\n            [name]: event.target.value,\n        });\n    };\n\n    getBalance = async (e) => {\n        e.preventDefault();\n        //console.log('address', this.state.address);\n        const api_call = await fetch(`/faucet/${this.state.address}`);\n        const data = await api_call.json();\n        //console.log(data);\n        if (data) {\n            this.setState({\n                currencyMap: data\n            });\n        } else {\n            this.setState({\n                currencyMap: undefined\n            });\n        }\n    };\n\n    postFaucet = async (e) => {\n        e.preventDefault();\n        const settings = {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                amount: this.state.amount,\n                currency: this.state.currency,\n                unit: this.state.unit\n            })\n        };\n\n        const api_call = await fetch(`/faucet/${this.state.address}`, settings)\n        const data = await api_call.json();\n        if (data) {\n            this.setState({\n                currencyMap: data\n            });\n        } else {\n            this.setState({\n                currencyMap: undefined\n            });\n        }\n    };\n\n    getTransaction = async (e) => {\n        e.preventDefault();\n        const api_call = await fetch(`/faucet/${this.state.address}/${this.state.currency}`);\n        const data = await api_call.json();\n        //console.log(data);\n        if (data) {\n            this.setState({\n                transactions: data\n            });\n        } else {\n            this.setState({\n                transactions: undefined\n            });\n        }\n    };\n\n\n    render() {\n        return (\n            <BrowserRouter>\n                <ResponsiveDrawer>\n                    <Switch>\n                        <Route exact path=\"/\" component={Home} />\n                        <Route path=\"/balance\" render = {\n                            props => <Balance {...props}\n                                              getBalance={this.getBalance}\n                                              handleChange={this.handleChange}\n                                              address={this.state.address}\n                                              currencyMap={this.state.currencyMap}/>} />\n                        <Route path=\"/faucet\" render = {\n                            props => <Faucet {...props}\n                                              postFaucet={this.postFaucet}\n                                              handleChange={this.handleChange}\n                                              address={this.state.address}\n                                              amount={this.state.amount}\n                                              currency={this.state.currency}\n                                              unit={this.state.unit}\n                                              currencyMap={this.state.currencyMap}/>} />\n                        <Route path=\"/transaction\" render = {\n                            props => <Transaction {...props}\n                                             getTransaction={this.getTransaction}\n                                             handleChange={this.handleChange}\n                                             address={this.state.address}\n                                             currency={this.state.currency}\n                                             transactions={this.state.transactions}/>} />\n                    </Switch>\n                </ResponsiveDrawer>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    typography: {\n        useNextVariants: true,\n    },\n});\n\nReactDOM.render(\n    <MuiThemeProvider theme={theme}>\n        <App />\n    </MuiThemeProvider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}